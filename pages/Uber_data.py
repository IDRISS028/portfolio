import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import pydeck as pdk
import time
import numpy as np
import plotly.express as px
from components import side,P_sub_side



st.set_page_config(
    page_title="Uber Projet",
    layout="wide",
    page_icon="üöó"
)

# Titre de la page
st.title("üöó Analyse des Trajets Uber - Avril 2014")

# On affiche le menu de gauche
side.side()

# On affiche le sous-menu de gauche
P_sub_side.sub_side()

    # Charger le dataset
@st.cache_data
def load_data():
    df = pd.read_csv('Datasets/uber-raw-data-apr14.csv')

    # Convertir la colonne 'Date/Time' en datetime
    df['Date/Time'] = pd.to_datetime(df['Date/Time'])
    df['DayOfWeek'] = df['Date/Time'].dt.weekday
    df['Hour'] = df['Date/Time'].dt.hour
    return df
df = load_data()

# Fonction pour compter le nombre de lignes 
def count_rows(rows):
    return len(rows)

    
# Ajouter un aper√ßu du dataset
st.subheader("Aper√ßu du Dataset")
st.write(df.iloc[0:5,0:4])  # Afficher les 5 premi√®res lignes du dataset
    
# Description du dataset
st.subheader("Description du Dataset")
st.write("""
Le dataset repr√©sente les trajets Uber effectu√©s au mois d'avril 2014 √† New York City. Il contient 564 516 enregistrements, avec les informations suivantes :
- **Date/Time** : La date et l'heure de d√©part du trajet.
- **Lat** : La latitude du point de d√©part du trajet.
- **Lon** : La longitude du point de d√©part du trajet.
- **Base** : Le code de base (station ou r√©gion associ√©e) qui a g√©n√©r√© le trajet.

Le but de cette analyse est d'explorer les tendances temporelles et g√©ographiques des trajets Uber, afin d'identifier des p√©riodes de forte demande et les zones les plus actives √† New York.
""")

    # Option pour s√©lectionner une visualisation
option = st.selectbox(
    'S√©lectionnez une visualisation :',
    ('Trajets par jour de la semaine', 'Trajets par heure', 'Carte Heatmap des trajets', 'Trajets par Base', 'Heatmap par heure et jour de la semaine','Heatmap dynamique')
    )

    # Visualisation 1 : Trajets par jour de la semaine
if option == 'Trajets par jour de la semaine':
    st.subheader("Nombre de trajets par jour de la semaine")
    plt.figure(figsize=(10, 6))
    sns.countplot(x='DayOfWeek', data=df)
    plt.title('Nombre de trajets par jour de la semaine')
    plt.xticks(np.arange(7), 'Lun Mar Mer Jeu Ven Sam Dim'.split())
    st.pyplot(plt)
        
        #Insights et Interpretations
    st.subheader("Insights:")
    st.write("""
                - **Mercredi** est le jour qui enregistre le plus grand nombre de trajets, avec plus de 100 000 trajets.
                - **Dimanche** enregistre le nombre de trajets le plus faible, avec un peu moins de 60 000 trajets.
                - Il y a une tendance g√©n√©rale montrant que le milieu de la semaine (mardi, mercredi, jeudi) est plus actif en termes de trajets Uber que le d√©but et la fin de la semaine (lundi, samedi, dimanche).
                - **Vendredi**  est √©galement un jour actif, proche des volumes du mercredi.""")
        
    st.subheader("Interpretations:")
    st.write("""
                - On pourrait supposer que la demande d'Uber augmente pendant la semaine de travail, notamment pour des trajets professionnels ou des d√©placements r√©guliers, et diminue le week-end, lorsque moins de personnes ont besoin de se d√©placer pour des raisons professionnelles.
                - **Mercredi** √©tant le jour le plus actif pourrait √™tre li√© √† une combinaison d'activit√©s professionnelles et sociales en milieu de semaine, tandis que la baisse observ√©e le dimanche pourrait √™tre attribu√©e √† la nature plus calme du week-end.
                """)
        
    st.write("""Cet insight peut √™tre utile pour planifier des strat√©gies commerciales, comme augmenter la disponibilit√© des voitures les jours les plus charg√©s ou pr√©voir des campagnes marketing pendant les p√©riodes plus calmes.""")


# Visualisation 2 : Trajets par heure de la journ√©e
elif option == 'Trajets par heure':
    st.subheader("Nombre de trajets par heure de la journ√©e")
    plt.figure(figsize=(10, 6))
    sns.countplot(x='Hour', data=df)
    plt.title('Nombre de trajets par heure de la journ√©e')
    st.pyplot(plt)
        
        #Insights et Interpretations
    st.subheader("Insights:")
    st.write("""
                - **Deux pics d‚Äôactivit√© principaux :** Le premier pic se situe entre 6h et 8h du matin, avec environ 20 000 √† 30 000 trajets. Ce pic correspond probablement √† l'heure de pointe matinale lorsque les gens se d√©placent pour aller au travail.Le second et plus grand pic se situe entre 15h et 19h, atteignant un maximum de plus de 40 000 trajets √† 17h. Cela refl√®te probablement l‚Äôheure de pointe en fin de journ√©e, au moment o√π les gens rentrent chez eux apr√®s le travail.   
                - **Faible activit√© durant la nuit :** Entre minuit et 5h du matin, le nombre de trajets est tr√®s bas, souvent en dessous de 10 000. Cela sugg√®re une faible demande de d√©placements pendant les heures tardives.
                - **Augmentation progressive en d√©but de journ√©e :** √Ä partir de 5h du matin, on observe une augmentation progressive des trajets, indiquant que l‚Äôactivit√© commence t√¥t et se renforce jusqu‚Äô√† l‚Äôheure de pointe matinale.
                - **Rel√¢chement apr√®s 18h :** Apr√®s le pic de 17h, le nombre de trajets diminue lentement mais reste relativement √©lev√© jusqu‚Äô√† 21h, avant de chuter davantage en fin de soir√©e.""")
        
    st.subheader("Interpretations:")
    st.write("""
                Ce graphique confirme que les courses Uber sont surtout utilis√©es aux heures de pointe en semaine, pour les trajets li√©s au travail, et augmentent √©galement en fin de semaine, probablement en lien avec les activit√©s de loisirs. Le mercredi et le vendredi semblent √™tre les jours o√π la demande est la plus forte.
                """)
        
        
    # Visualisation 3 : Carte Heatmap des trajets
elif option == 'Carte Heatmap des trajets':
    st.subheader("Carte Heatmap des trajets Uber √† New York")

        
    # Configurer les donn√©es pour Pydeck
    view_state = pdk.ViewState(
            latitude=40.7128,
            longitude=-74.0060,
            zoom=11,
            pitch=50,
        )

    # Cr√©er une couche de carte de chaleur
    layer = pdk.Layer(
            "HeatmapLayer",
            data=df[['Lat', 'Lon']],
            get_position=['Lon', 'Lat'],
            radius=100,
            elevation_scale=50,
            elevation_range=[0, 300],
            pickable=True,
            extruded=True,
        )
        
           
    # Rendu de la carte
    map_deck = pdk.Deck(layers=[layer], initial_view_state=view_state)
    st.pydeck_chart(map_deck)
       
        
        

        
elif option == 'Trajets par Base':
    st.subheader("Nombre de trajets par Base")
    plt.figure(figsize=(10, 6))
    sns.countplot(x='Base', data=df, order=df['Base'].value_counts().index)
    plt.title('Nombre de trajets par Base')
    plt.xticks(rotation=45)
    st.pyplot(plt)
        
elif option == 'Heatmap par heure et jour de la semaine':
    st.subheader("Mod√®le hebdomadaire des trajets")
    df2 = df.groupby(['DayOfWeek', 'Hour']).apply(count_rows).unstack()
    st.write(df2.head(7))
    heatmap = sns.heatmap(df2,linewidths =.5)
    plt.title('Heatmap par heure et jour de la semaine - Uber - April 2014',fontsize=15)
    heatmap.set_yticklabels(('Lun Mar Mer Jeu Ven Sam Dim').split(), rotation='horizontal')
    st.pyplot(plt)

        #Insights et Interpretations
    st.subheader("Insights:")
    st.write("""
                - **Activit√© concentr√©e en semaine le matin et l'apr√®s-midi :** Le volume est √©lev√© entre 6h et 8h, puis entre 15h et 21h, du mardi au jeudi, ce qui sugg√®re que les utilisateurs utilisent Uber principalement pour leurs trajets domicile-travail. Le mercredi pr√©sente un pic particuli√®rement important dans ces plages horaires.
                - **Vendredi apr√®s-midi :**  Le vendredi a une activit√© notable dans l'apr√®s-midi, de 15h √† 22h, qui est plus √©lev√©e que celle observ√©e en d√©but de matin√©e.
                - **Week-ends plus calmes :** Le samedi et le dimanche montrent une activit√© plus dispers√©e et globalement moins intense, avec des pics mod√©r√©s en d√©but de soir√©e.
                - **Forte diminution durant la nuit :** Les courses sont tr√®s rares pendant la nuit, surtout entre minuit et 5h du matin, indiquant une faible demande pour les trajets nocturnes.""")
        
    st.subheader("Interpretations:")
    st.write("""
                Ce graphique confirme que les courses Uber sont surtout utilis√©es aux heures de pointe en semaine, pour les trajets li√©s au travail, et augmentent √©galement en fin de semaine, probablement en lien avec les activit√©s de loisirs. Le mercredi et le vendredi semblent √™tre les jours o√π la demande est la plus forte.
                """)
        
        
elif option == "Heatmap dynamique":
    st.subheader("Heatmap dynamique des trajets")
    # Extraire les jours de la semaine et les heures
    df['WeekDay'] = df['Date/Time'].dt.day_name()  # Noms des jours
    df['Hour'] = df['Date/Time'].dt.hour  # Heures de la journ√©e

        # Compter le nombre de trajets par jour et par heure
    df2 = df.groupby(['WeekDay', 'Hour']).size().reset_index(name='Counts')

        # R√©organiser les jours de la semaine
    days_order = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
    df2['WeekDay'] = pd.Categorical(df2['WeekDay'], categories=days_order, ordered=True)

    # Cr√©er une heatmap interactive avec Plotly
    fig = px.density_heatmap(
        df2, 
        x='Hour', 
        y='WeekDay', 
        z='Counts', 
        color_continuous_scale='Viridis', 
        labels={'DayOfWeek': 'Jour de la semaine', 'Hour': 'Heure de la journ√©e', 'Counts': 'Nombre de trajets'},
        title='Heatmap interactive par heure et jours de la semaine - Uber - Avril 2014'
        )

        # Afficher le graphique dans Streamlit
    st.plotly_chart(fig)
        
    
